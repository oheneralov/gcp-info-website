-
    function nameToLink(name) {
        try {
            return name.trim().replace(/\s/g, '-').toLowerCase() + '.html';
        } catch (error) {
            throw new Error('Error in function nameToLink:\n' + error);
        }
    }

    function getImageSize(name) {
        try {
            return name.match('[0-9]+(x)[0-9]+')[0].split('x');
        } catch (error) {
            throw new Error('Error in function getImageSize:\n' + error);
        }
    }
    function procImg(imgName) {
        var
                extMatch = imgName.match(/(.jpg|.png|.gif|.svg)$/i),
                httpTest = /:\/\//.test(imgName);

        if (!httpTest && (extMatch === null || extMatch.length === 0)) imgName += '.jpg';
        if (!httpTest) imgName = 'images/' + imgName;

        return imgName;
    }

//- Image
mixin img( name, options )
    -
        var size = getImageSize(name);
        if (options && options.retina) {
            size[0] = ~~(size[0] / 2);
            size[1] = ~~(size[1] / 2);
        }
    img( src= procImg(name), alt='', width= size[0], height= size[1], loading='lazy' )&attributes( attributes )

//- Jpg image
mixin jpg(name, className)
    - var size = getImageSize(name);
    img(src='images/' + name + '.jpg', alt='', width=size[0], height=size[1], class=className)

//- Png image
mixin png(name, className)
    - var size = getImageSize(name);
    img(src='images/' + name + '.png', alt='', width=size[0], height=size[1], class=className)

mixin parallax-section(obj)
    section.section.parallax-container(class = obj.bgClass ? obj.bgClass : 'bg-image')&attributes(attributes)
        .material-parallax
            img(src='images/' + obj.parallaxImage + '.jpg' alt='')
        .parallax-content
            block
    ="\n"

//- Loop mixin
mixin loop(count)
    - if (typeof(count) === 'undefined') var count = 6;
    - for (var i = 0; i < count ; i++)
    block

//- Navigation
mixin navigation( menu )
    ul.rd-navbar-nav&attributes( attributes )
        each item in menu
            li( class= {active: item.active} ): a( href= item.link)= item.title


//- Breadcrumbs custom
mixin breadcrumbs(obj)
    - var activeItemName = obj.path.pop()[0];
    - var mainTitle= obj.title ? obj.title : activeItemName;
    // Breadcrumbs
    section.breadcrumbs-custom.bg-image
        .container
            p.heading-1.breadcrumbs-custom-title=mainTitle

            ul.breadcrumbs-custom-path
                li: a(href='index.html')=menu[0].title
                - for (var i = 0; i < obj.path.length; i++)
                - if (obj.path[i][0] == activeItemName) break;
                - var pathLink = obj.path[i][1] ? obj.path[i][1] : nameToLink(obj.path[i][0])
                li: a(href=pathLink)=obj.path[i][0]

                li.active=activeItemName

    ="\n"


//- Icon list
mixin list-inline-icon(obj)
    ul(class=obj.list_class)
        each item in obj.items
            li: a.icon(href='#' class=item)


//- Footers
include sections/_footers